panel.border = element_blank()
)
ggsave(
filename = "Mappe Eurostat/Time spent on Sports and outdoor activities_(FEMALES)_2010.png",
width = 7, height = 8.5, dpi = 600,
device = "png", bg = "white", p
)
## 2000 ----
# get NUTS2-level data
get_eurostat_data <- function() {
eurostat_df <- eurostat::get_eurostat(
"tus_00age",
time_format = "num"
) |>
dplyr::filter(
time == 2000 &
age == "TOTAL" &
sex == "T" &
unit == "PTP_RT" &
acl00 == "AC6A"
) |>
dplyr::select(geo, time, values)
names(eurostat_df)[1] <- "CNTR_CODE"
return(eurostat_df)
}
eurostat_df <- get_eurostat_data()
head(eurostat_df)
# convert to wide format
wide_df <- tidyr::pivot_wider(
eurostat_df,
names_from = time, values_from = values
)
head(wide_df)
get_enriched_table <- function() {
enriched_df <- wide_df |>
dplyr::mutate(values = `2000`) |> ########
dplyr::select(CNTR_CODE, values)
# merge shp and data.frame
df <- nuts2 |>
dplyr::left_join(enriched_df, by = "CNTR_CODE")
return(df)
}
df <- get_enriched_table()
head(df)
# LEGEND BREAKS ----
# let's find a natural interval with Jenks breaks
#df$values <- df$values / 1000
ni <- classInt::classIntervals(df$values,
n = 6,
style = "fisher"
)$brks
# this function uses above intervals to create categories
labels <- c()
for (i in 1:length(ni)) {
labels <- c(labels, paste0(
round(ni[i], 0),
"-",
round(ni[i + 1], 0)
))
}
labels <- labels[1:length(labels) - 1]
# finally, carve out the categorical variable
# based on the breaks and labels above
df$cat <- cut(df$values,
breaks = ni,
labels = labels,
include.lowest = T
)
levels(df$cat)
# label NAs, too
lvl <- levels(df$cat)
lvl[length(lvl) + 1] <- "No data"
df$cat <- factor(df$cat, levels = lvl)
df$cat[is.na(df$cat)] <- "No data"
levels(df$cat)
# BOUNDING BOX ----
crsLAEA <- "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +datum=WGS84 +units=m +no_defs"
get_bounding_box_europe <- function() {
xmin <- -10.6600
xmax <- 36.5500
ymin <- 34.5000
ymax <- 71.0500
bbox_laea <- sf::st_sfc(
sf::st_polygon(list(cbind(
c(xmin, xmax, xmax, xmin, xmin),
c(ymin, ymin, ymax, ymax, ymin)
))),
crs = crsLONGLAT
) |> sf::st_transform(crsLAEA)
bbox <- sf::st_bbox(bbox_laea)
return(bbox)
}
bbox <- get_bounding_box_europe()
# MAP ----
cols <- c('#f7e028', '#eeb320', '#f0951e', '#c4630e', '#aa3b06', '#8d0000', "#cacaca")
p <- ggplot() +
geom_sf(
data = filter(eu, CNTR_ID == "RS"),
color = "grey20", size = 0.15, fill = "#cacaca"
) +
geom_sf(data = df, aes(fill = cat), color = NA, size = 0) +
geom_sf(data = eu, color = "grey20", size = 0.125, fill = "transparent") +
geom_sf(
data = non_eu, color = "grey20", size = 0.125, fill = "#cacaca"
) +
coord_sf(
crs = crsLAEA,
xlim = c(bbox["xmin"], bbox["xmax"]),
ylim = c(bbox["ymin"], bbox["ymax"])
) +
scale_fill_manual(
name = "Participation rate",
values = cols,
drop = F
) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.5, units = "mm"),
keywidth = unit(15, units = "mm"),
title.position = "top",
title.hjust = .5,
label.hjust = .5,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"
)) +
labs(
x = "Sport Business Lab Consultancy\nData: Eurostat",
y = NULL,
title = "Time spent on Sports and outdoor activities 2000",
subtitle = ""
) +
theme_minimal() +
theme(
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(
size = 11, color = '#00a2d2',
hjust = 0.5, vjust = 6
),
axis.title.y = element_blank(),
legend.position = c(.35, .975),
legend.text = element_text(
size = 7, color = "#25465d"
),
legend.title = element_text(
size = 11, color = "#25465d"
),
legend.spacing.y = unit(0.25, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
face = "bold", size = 20, color = '#00a2d2',
hjust = .5
),
plot.caption = element_text(
size = 10, color = "#25465d", hjust = .5,
vjust = 5
),
plot.margin = unit(
c(t = 1, r = -2, b = -1, l = -2), "lines"
),
plot.background = element_blank(),
panel.background = element_blank(),
legend.background = element_blank(),
panel.border = element_blank()
)
ggsave(
filename = "Mappe Eurostat/Time spent on Sports and outdoor activities_2000.png",
width = 7, height = 8.5, dpi = 600,
device = "png", bg = "white", p
)
## 2000 MALES----
# get NUTS2-level data
get_eurostat_data <- function() {
eurostat_df <- eurostat::get_eurostat(
"tus_00age",
time_format = "num"
) |>
dplyr::filter(
time == 2000 &
age == "TOTAL" &
sex == "M" &
unit == "PTP_RT" &
acl00 == "AC6A"
) |>
dplyr::select(geo, time, values)
names(eurostat_df)[1] <- "CNTR_CODE"
return(eurostat_df)
}
eurostat_df <- get_eurostat_data()
head(eurostat_df)
# convert to wide format
wide_df <- tidyr::pivot_wider(
eurostat_df,
names_from = time, values_from = values
)
head(wide_df)
get_enriched_table <- function() {
enriched_df <- wide_df |>
dplyr::mutate(values = `2000`) |> ########
dplyr::select(CNTR_CODE, values)
# merge shp and data.frame
df <- nuts2 |>
dplyr::left_join(enriched_df, by = "CNTR_CODE")
return(df)
}
df <- get_enriched_table()
head(df)
# LEGEND BREAKS ----
# let's find a natural interval with Jenks breaks
#df$values <- df$values / 1000
ni <- classInt::classIntervals(df$values,
n = 6,
style = "fisher"
)$brks
# this function uses above intervals to create categories
labels <- c()
for (i in 1:length(ni)) {
labels <- c(labels, paste0(
round(ni[i], 0),
"-",
round(ni[i + 1], 0)
))
}
labels <- labels[1:length(labels) - 1]
# finally, carve out the categorical variable
# based on the breaks and labels above
df$cat <- cut(df$values,
breaks = ni,
labels = labels,
include.lowest = T
)
levels(df$cat)
# label NAs, too
lvl <- levels(df$cat)
lvl[length(lvl) + 1] <- "No data"
df$cat <- factor(df$cat, levels = lvl)
df$cat[is.na(df$cat)] <- "No data"
levels(df$cat)
# BOUNDING BOX ----
crsLAEA <- "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +datum=WGS84 +units=m +no_defs"
get_bounding_box_europe <- function() {
xmin <- -10.6600
xmax <- 36.5500
ymin <- 34.5000
ymax <- 71.0500
bbox_laea <- sf::st_sfc(
sf::st_polygon(list(cbind(
c(xmin, xmax, xmax, xmin, xmin),
c(ymin, ymin, ymax, ymax, ymin)
))),
crs = crsLONGLAT
) |> sf::st_transform(crsLAEA)
bbox <- sf::st_bbox(bbox_laea)
return(bbox)
}
bbox <- get_bounding_box_europe()
# MAP ----
cols <- c('#82e0ff', '#71bfed', '#5e9edb', '#4a7fca', '#3060b8', '#0043a6', "#cacaca")
p <- ggplot() +
geom_sf(
data = filter(eu, CNTR_ID == "RS"),
color = "grey20", size = 0.15, fill = "#cacaca"
) +
geom_sf(data = df, aes(fill = cat), color = NA, size = 0) +
geom_sf(data = eu, color = "grey20", size = 0.125, fill = "transparent") +
geom_sf(
data = non_eu, color = "grey20", size = 0.125, fill = "#cacaca"
) +
coord_sf(
crs = crsLAEA,
xlim = c(bbox["xmin"], bbox["xmax"]),
ylim = c(bbox["ymin"], bbox["ymax"])
) +
scale_fill_manual(
name = "Participation rate",
values = cols,
drop = F
) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.5, units = "mm"),
keywidth = unit(15, units = "mm"),
title.position = "top",
title.hjust = .5,
label.hjust = .5,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"
)) +
labs(
x = "Sport Business Lab Consultancy\nData: Eurostat",
y = NULL,
title = "Time spent on Sports and outdoor activities (MALES) 2000",
subtitle = ""
) +
theme_minimal() +
theme(
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(
size = 11, color = "#f0951e",
hjust = 0.5, vjust = 6
),
axis.title.y = element_blank(),
legend.position = c(.35, .975),
legend.text = element_text(
size = 7, color = "#25465d"
),
legend.title = element_text(
size = 11, color = "#25465d"
),
legend.spacing.y = unit(0.25, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
face = "bold", size = 15, color = "#f0951e",
hjust = .5
),
plot.caption = element_text(
size = 10, color = "#25465d", hjust = .5,
vjust = 5
),
plot.margin = unit(
c(t = 1, r = -2, b = -1, l = -2), "lines"
),
plot.background = element_blank(),
panel.background = element_blank(),
legend.background = element_blank(),
panel.border = element_blank()
)
ggsave(
filename = "Mappe Eurostat/Time spent on Sports and outdoor activities_(MALES)_2000.png",
width = 7, height = 8.5, dpi = 600,
device = "png", bg = "white", p
)
## 2000 FEMALES----
# get NUTS2-level data
get_eurostat_data <- function() {
eurostat_df <- eurostat::get_eurostat(
"tus_00age",
time_format = "num"
) |>
dplyr::filter(
time == 2000 &
age == "TOTAL" &
sex == "F" &
unit == "PTP_RT" &
acl00 == "AC6A"
) |>
dplyr::select(geo, time, values)
names(eurostat_df)[1] <- "CNTR_CODE"
return(eurostat_df)
}
eurostat_df <- get_eurostat_data()
head(eurostat_df)
# convert to wide format
wide_df <- tidyr::pivot_wider(
eurostat_df,
names_from = time, values_from = values
)
head(wide_df)
get_enriched_table <- function() {
enriched_df <- wide_df |>
dplyr::mutate(values = `2000`) |> ########
dplyr::select(CNTR_CODE, values)
# merge shp and data.frame
df <- nuts2 |>
dplyr::left_join(enriched_df, by = "CNTR_CODE")
return(df)
}
df <- get_enriched_table()
head(df)
# LEGEND BREAKS ----
# let's find a natural interval with Jenks breaks
#df$values <- df$values / 1000
ni <- classInt::classIntervals(df$values,
n = 6,
style = "fisher"
)$brks
# this function uses above intervals to create categories
labels <- c()
for (i in 1:length(ni)) {
labels <- c(labels, paste0(
round(ni[i], 0),
"-",
round(ni[i + 1], 0)
))
}
labels <- labels[1:length(labels) - 1]
# finally, carve out the categorical variable
# based on the breaks and labels above
df$cat <- cut(df$values,
breaks = ni,
labels = labels,
include.lowest = T
)
levels(df$cat)
# label NAs, too
lvl <- levels(df$cat)
lvl[length(lvl) + 1] <- "No data"
df$cat <- factor(df$cat, levels = lvl)
df$cat[is.na(df$cat)] <- "No data"
levels(df$cat)
# BOUNDING BOX ----
crsLAEA <- "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +datum=WGS84 +units=m +no_defs"
get_bounding_box_europe <- function() {
xmin <- -10.6600
xmax <- 36.5500
ymin <- 34.5000
ymax <- 71.0500
bbox_laea <- sf::st_sfc(
sf::st_polygon(list(cbind(
c(xmin, xmax, xmax, xmin, xmin),
c(ymin, ymin, ymax, ymax, ymin)
))),
crs = crsLONGLAT
) |> sf::st_transform(crsLAEA)
bbox <- sf::st_bbox(bbox_laea)
return(bbox)
}
bbox <- get_bounding_box_europe()
# MAP ----
cols <- c('#ffc6ec', '#ebb8dc', '#d6aacb', '#c39cbb', '#af8eab', '#9c819c', "#cacaca")
p <- ggplot() +
geom_sf(
data = filter(eu, CNTR_ID == "RS"),
color = "grey20", size = 0.15, fill = "#cacaca"
) +
geom_sf(data = df, aes(fill = cat), color = NA, size = 0) +
geom_sf(data = eu, color = "grey20", size = 0.125, fill = "transparent") +
geom_sf(
data = non_eu, color = "grey20", size = 0.125, fill = "#cacaca"
) +
coord_sf(
crs = crsLAEA,
xlim = c(bbox["xmin"], bbox["xmax"]),
ylim = c(bbox["ymin"], bbox["ymax"])
) +
scale_fill_manual(
name = "Participation rate",
values = cols,
drop = F
) +
guides(fill = guide_legend(
direction = "horizontal",
keyheight = unit(1.5, units = "mm"),
keywidth = unit(15, units = "mm"),
title.position = "top",
title.hjust = .5,
label.hjust = .5,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"
)) +
labs(
x = "Sport Business Lab Consultancy\nData: Eurostat",
y = NULL,
title = "Time spent on Sports and outdoor activities (FEMALES) 2000",
subtitle = ""
) +
theme_minimal() +
theme(
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_text(
size = 11, color = "#f0951e",
hjust = 0.5, vjust = 6
),
axis.title.y = element_blank(),
legend.position = c(.35, .975),
legend.text = element_text(
size = 7, color = "#25465d"
),
legend.title = element_text(
size = 11, color = "#25465d"
),
legend.spacing.y = unit(0.25, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(
face = "bold", size = 15, color = "#f0951e",
hjust = .5
),
plot.caption = element_text(
size = 10, color = "#25465d", hjust = .5,
vjust = 5
),
plot.margin = unit(
c(t = 1, r = -2, b = -1, l = -2), "lines"
),
plot.background = element_blank(),
panel.background = element_blank(),
legend.background = element_blank(),
panel.border = element_blank()
)
ggsave(
filename = "Mappe Eurostat/Time spent on Sports and outdoor activities_(FEMALES)_2000.png",
width = 7, height = 8.5, dpi = 600,
device = "png", bg = "white", p
)
install.packages("sf")
